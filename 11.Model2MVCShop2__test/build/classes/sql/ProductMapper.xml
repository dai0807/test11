<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProductMapper">

		
	<resultMap id="productSelectMap" type="product">
			<result property="prodNo" 				column="prod_no" 			jdbcType="NUMERIC"/>
		<result property="prodName"				column="prod_name" 			jdbcType="VARCHAR" />
		<result property="prodDetail" 			column="prod_detail" 		jdbcType="VARCHAR" />
		<result property="manuDate" 			column="manufacture_day" 	jdbcType="VARCHAR" />
		<result property="price" 				column="price" 				jdbcType="NUMERIC" />
		<result property="fileName" 			column="image_file" 		jdbcType="VARCHAR" />
		<result property="regDate" 				column="reg_date" 			jdbcType="DATE" />
 		<result property="proTranCode" 			column="pro_tran_status_code" 			jdbcType="CHAR" />
 		<result property="quantity" 			 column="quantity" 				jdbcType="NUMERIC" />
 
	</resultMap>
	
	<!-- SQL : INSERT -->
	
	 <insert id ="addProduct" parameterType="product">
		 INSERT
			 INTO product	(prod_no , 		prod_name , prod_detail,	manufacture_day ,price,	image_file ,reg_date ,quantity)
			 VALUES			( seq_product_prod_no.nextval, #{prodName} ,#{prodDetail} ,  #{manuDate}  , #{price} , #{fileName} , SYSDATE ,#{quantity} )
			  
	 </insert>
	 
 <!-- SQL : SELECT ONE
	 <select id ="getProduct"  parameterType="int"  resultMap="productSelectMap">
		SELECT prod_name,prod_detail,manufacture_day,price, image_file from product  where prod_no = #{value}
	 </select> --> 
	
	<!--   수량 전 list 코드 
		 <select 	id="getProduct"		parameterType="int"		resultMap="productSelectMap">
		SELECT
		p.*, NVL(t.tran_status_code,'000') pro_tran_status_code  		
		FROM product p, transaction t 
		WHERE  t.prod_no(+)   =   p.prod_no  AND p.prod_no =  #{value}
	 </select> 
	 -->
		 <select 	id="getProduct"		parameterType="int"		resultMap="productSelectMap">
		SELECT * from 
		product 
		WHERE  prod_no =  #{value}
	 </select> 	 
	 
	  <!-- SQL : 트랜코드 받기  아직 단위 테스트 안함 -->
	 <select id ="getTrandCode"  parameterType="int" resultType="int">
		 SELECT tran_no  FROM transaction WHERE prod_no = #{value}
	 </select>
	 
	 
	 
	 <update id = "updateProduct" parameterType="product" >
		 UPDATE product
			 <set>
			 prod_name 		= #{prodName}	,
			 prod_detail 	= #{prodDetail}	,
			 manufacture_day= #{manuDate}	,
			 price			= #{price} 		,
			 image_file		= #{fileName}	,
			 quantity		= #{quantity} 
			 </set>
		WHERE prod_no = #{prodNo}
	 </update>
	 
 	 <update id = "minusQuantity" parameterType="product" >
		 UPDATE product
			 <set>
			 quantity 		= #{quantity} 
			 </set>
		WHERE prod_no = #{prodNo}
	 </update>
	 
	  
	
	 
	 <!-- SQL :: select List  -->
	   
	 <select id ="getProductList" parameterType="search"	resultMap="productSelectMap" >
	  	SELECT *
		  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
		  					FROM		(	SELECT p.* ,  NVL(t.tran_status_code, '000')  pro_tran_status_code
												FROM product p , transaction t
 													<where>
 												 p.prod_no =	 t.prod_no(+)    
													<if test="searchCondition != null">
																<if test="searchCondition == 0 and searchKeyword !='' ">
														 			AND p.prod_no LIKE  LIKE '%' || #{searchKeyword} || '%'
																</if>
																<if test="searchCondition == 1 and searchKeyword !='' ">
														 			AND 	p.prod_name LIKE '%' || #{searchKeyword} || '%'
																</if>
																 <if test="searchCondition == 2 and searchKeyword !='' ">
														 				AND p.price = #{searchKeyword}
																</if>
													 </if>
															
													</where>
												ORDER BY p.prod_no ) inner_table
							WHERE ROWNUM &lt;= #{endRowNum} )
			WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
		 	
	 
	 </select>
 
	
	
	
		 <select id ="getnewProductList"  parameterType="int"	resultMap="productSelectMap" >
	    select inner.*   from (
			select prod_no , prod_name ,price , image_file,quantity, reg_date 
			From product  order by  reg_date DESC) inner WHERE ROWNUM  &lt;= #{value}
		 	
	 
	 </select>
	
	 
		 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT  p.*  
						FROM product p 
 							<where>
 									 <if test="searchCondition != null">
							
										<if test="searchCondition == 0 and searchKeyword !='' ">
								 		AND 	p.prod_no  LIKE '%' || #{searchKeyword} || '%'
										</if>
										<if test="searchCondition == 1 and searchKeyword !='' ">
 											AND 	p.prod_name LIKE '%' || #{searchKeyword} || '%'
										</if>
										 <if test="searchCondition == 2 and searchKeyword !='' ">
								 		AND  	p.price = #{searchKeyword}
										</if>
								</if>
							</where>
						 ) countTable						
	 </select>	
	 	<!--  USER 아직 안바꿈 SQL : SELECT ROW Count -->	 
	 	<!--  프로덕트 수량 전  
	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT  p.* ,  NVL(t.tran_status_code, '000')  pro_tran_status_code
						FROM product p , transaction t
 							<where>
 												 p.prod_no =	 t.prod_no(+)    
									 <if test="searchCondition != null">
							
										<if test="searchCondition == 0 and searchKeyword !='' ">
								 		AND 	p.prod_no  LIKE '%' || #{searchKeyword} || '%'
										</if>
										<if test="searchCondition == 1 and searchKeyword !='' ">
 											AND 	p.prod_name LIKE '%' || #{searchKeyword} || '%'
										</if>
										 <if test="searchCondition == 2 and searchKeyword !='' ">
								 		AND  	p.price = #{searchKeyword}
										</if>
								</if>
							</where>
						 ) countTable						
	 </select>
	 
	  -->
	 <!-- 
	 
	 	SELECT p.* ,  NVL(t.tran_status_code, '000')  pro_tran_status_code
												FROM product p , transaction t
 													<where>
 													 t.prod_no   =   p.prod_no(+)  
	  -->
	 
	 

</mapper>